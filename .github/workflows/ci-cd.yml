name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Instalar dependências e compilar
        run: mvn clean package -DskipTests

      - name: Armazenar artefato
        uses: actions/upload-artifact@v3
        with:
          name: application-jar
          path: target/*.jar

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Executar testes
        run: mvn test

  docker:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Login no DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Construir imagem Docker
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/springboot-app:latest .
          docker tag ${{ secrets.DOCKER_USERNAME }}/springboot-app:latest ${{ secrets.DOCKER_USERNAME }}/springboot-app:${{ github.sha }}

      - name: Enviar imagem Docker para DockerHub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/springboot-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/springboot-app:${{ github.sha }}